import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:logger/logger.dart';
import 'package:to_do_app/data/models/posts/get_posts/get_alarm.dart';
import 'package:to_do_app/data/models/posts/get_posts/post_alarm.dart';
import 'package:to_do_app/data/models/posts/get_posts/response_alarm.dart';
import 'package:to_do_app/features/controller/crud_operation.dart';

class AddController extends GetxController {
  PostAlarm? addAlarmModel;
  late TextEditingController titleController;
  late TextEditingController descController;
  var isTapped = false.obs;
  bool isAddStatus = true;
  int? id;

  @override
  void onInit() {
    super.onInit();

    initControllers();
  }

  void fillAlarm() {
    var args = Get.arguments;
    if (args is Alarms) {
      //?now in edit mode
      isAddStatus = false;
      id = args.id;
      update(["1"]);
      titleController.text = args.title!;
      descController.text = args.description ?? "";
      addAlarmModel = PostAlarm(
        title: titleController.text,
        description: descController.text,
        type: "hh",
        alarmTime: "03:00",
        alarmDate: "2025-04-17",
      );
    }
  }

  @override
  void onClose() {
    dispose();
    super.onClose();
  }

  //initalize contorllers
  void initControllers() {
    titleController = TextEditingController();
    descController = TextEditingController();
  }

  void disposeControllers() {
    titleController.dispose();
    descController.dispose();
  }

  Future<void> addAlarm() async {
    addAlarmModel = PostAlarm(
      title: titleController.text,
      description: descController.text,
      type: "hh",
      alarmTime: "03:00",
      alarmDate: "2025-04-17",
    );

    PostAlarmResponse res = await UserRepo.addAlarm(addAlarmModel!);

    //TODO:back with data
    Get.back(result: res);
  }

  void editAlarm() async {
    var res = await UserRepo.updateData(
        id!,
        Alarms(
            id: id,
            title: titleController.text,
            description: descController.text,
            type: "medicine",
            isRepeatable: 0,
            medicineStartDate: "2025-04-17",
            alarmTime: "03:00",
            alarmDate: "2025-04-17")) as Map<String, dynamic>;

    //TODO:back with data
    Get.back(
      result: Alarms(
          id: id,
          title: titleController.text,
          description: descController.text,
          type: "hh",
          alarmTime: "03:00",
          alarmDate: "2025-04-17"),
    );
  }
}
